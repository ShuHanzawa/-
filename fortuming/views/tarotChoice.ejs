<!DOCTYPE html>
<html lang="ja" class="no-js">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel='stylesheet' href='https://unpkg.com/ress/dist/ress.min.css'>
    <link href="https://fonts.googleapis.com/css2?family=Zen+Maru+Gothic:wght@400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/baraja.css"/>
    <link rel="stylesheet" href="/stylesheets/tarot-top.css">
    <link rel="stylesheet" href="/stylesheets/tarotChoice.css">
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
    <script src="/javascripts/modernizr.custom.79639.js"></script>
    <script src="/javascripts/jquery.baraja.js"></script>
    <title>タロット選択</title>
</head>
<body>
    <div class="header">
        <p class="logo"><a href="http://localhost:3001/">Fortuming</a></p>
        <div id="menu">
            <span class="bar1"></span>
            <span class="bar2"></span>
            <span class="bar3"></span>
        </div>
    </div>

    <div id="menuContents">
        <p>Menu</p>
            <ul>
                <li><a href="http://localhost:3001/">トップ</a></li>
                <li><a href="http://localhost:3001/tarot/">星占い</a></li>
            </ul>
    </div>


    <div class="wrapper">
    <div class="main">
        
        <p>カードを一枚選択してね</p>

        <div class="baraja-demo">
            <ul id="baraja-el" class="baraja-container">
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
                <li><a href="http://localhost:3001/tarot/result" class="js-glitter"><img src="/images/tarotCard.PNG" alt="image0"/></a></li>
            </ul>
        </div>
    </div>
</div>
<div class="footer">
    <p>Powered by Dreamcareer</p>
</div>
    <script>
        $(function() {
            // global
	        var Modernizr = window.Modernizr;

            window.setTimeout(() => {
                var $el = $( '#baraja-el' ),
			    baraja = $el.baraja();
                baraja.fan( {
                    
                    // speed for opening/closing
		    	    speed : 900,
                    // easing for opening/closing
				    easing : 'ease-out',
                    // アイテムが持つ可能性のある角度の差/範囲
                    // 例: range:90 と center:false を最初のアイテムに使用
                    // 例: range:90 と center:false を最初のアイテムに使用
                    // 例: range:90 と center:false を最初のアイテムに使用
                    // そして最後の -45deg; どちらの場合も、差は 90 度
				    range : 100,
                    // これは最初のアイテムの位置を定義します
                    // (右へ、左へ)
                    // とその角度 (時計回り/反時計回り)
				    direction : 'right',
                    // 変換元:
                    // 左の値を意味する minX と maxX を渡すこともできます
                    // minX と maxX の間で変化します
				    origin : { x : 50, y : 250 },
                    // 各項目の追加翻訳
				    translation : 0,
                    // 変換後にカードを中央に配置する必要がある場合
				    //適用されます
				    center : true,
                    // 最終的な変換に乱数を追加します
				    scatter : false
			    } );
            }, 700);

            //// キラキラさせます   /////
            
            // js-glitterクラスがついた要素を全て取得
            const glitterEls = document.querySelectorAll(".js-glitter");

            // 取得した要素をArrayに変換
            const glitterElsArr = Array.prototype.slice.call(glitterEls);

            // 取得した要素ひとつひとつに処理を行う
            glitterElsArr.forEach((glitterEl) => {
            let interval;
            
            // マウスホバー時にキラキラを生成
            glitterEl.addEventListener("mouseenter", () => {
                interval = setInterval(createStar.bind(undefined, glitterEl), 200);
            });

            // マウスを離すと停止
            glitterEl.addEventListener("mouseleave", () => {
                clearInterval(interval);
            });
            });

            // キラキラを生成する関数
            const createStar = (el) => {
            const starEl = document.createElement("span");
            starEl.className = "star";
            starEl.style.left = Math.random() * el.clientWidth + "px";
            starEl.style.top = Math.random() * el.clientHeight + "px";
            el.appendChild(starEl);

            // 一定時間経つとキラキラを消す
            setTimeout(() => {
                starEl.remove();
            }, 1000);
            };
        })

        $("#menu").click(function(){
            $(this).toggleClass('active');
            $("#menuContents").toggleClass('active');
        });
    </script>
    
</body>
</html>